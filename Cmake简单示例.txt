Cmake


CMakeLists.txt

PROJECT(main)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

INCLUDE_DIRECTORIES(/usr/include/mysql)

LINK_DIRECTORIES(/usr/lib)

AUX_SOURCE_DIRECTORY(. DIR_SRCS)

ADD_EXECUTABLE(main ${DIR_SRCS})

TARGET_LINK_LIBRARIES(main mysqlclient)



cmake .



http://www.ibm.com/developerworks/cn/linux/l-cn-cmake/



http://blog.chinaunix.net/uid-14007440-id-3189850.html





#表示cpp文件列表的变量，如${DIRA_SRCS}代表src/dira目录下的所有源文件

AUX_SOURCE_DIRECTORY(src/dira DIRA_SRCS)





///////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////

PROJECT(epollsocket)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(CMAKE_C_FLAGS_DEBUG "$ENV{CFLAGS} -fopenmp -O0 -Wall -g -ggdb")

SET(CMAKE_C_FLAGS_RELEASE "$ENV{CFLAGS} -fopenmp -O3 -Wall")

AUX_SOURCE_DIRECTORY(. DIR_SRCS)

ADD_LIBRARY(epollsocket SHARED ${DIR_SRCS})

TARGET_LINK_LIBRARIES(epollsocket pthread)









///////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////

PROJECT(main)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(CMAKE_C_FLAGS_DEBUG "$ENV{CFLAGS} -fopenmp -O0 -Wall -g -ggdb")

SET(CMAKE_C_FLAGS_RELEASE "$ENV{CFLAGS} -fopenmp -O3 -Wall")

#SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb")

#SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall")

AUX_SOURCE_DIRECTORY(. DIR_SRCS)

ADD_EXECUTABLE(main ${DIR_SRCS})





///////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////





set(CMAKE_C_COMPILER "arm-linux-androideabi-gcc")

PROJECT(main)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(CMAKE_C_FLAGS_DEBUG "$ENV{CFLAGS} -O0 -Wall -g -ggdb")

SET(CMAKE_C_FLAGS_RELEASE "$ENV{CFLAGS} -O3 -Wall")

AUX_SOURCE_DIRECTORY(. DIR_SRCS)

ADD_EXECUTABLE(main ${DIR_SRCS})

